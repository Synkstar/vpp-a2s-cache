// Code generated by GoVPP's binapi-generator. DO NOT EDIT.

package a2s

import (
	"context"

	api "go.fd.io/govpp/api"
)

// RPCService defines RPC service a2s.
type RPCService interface {
	A2sEnableDisable(ctx context.Context, in *A2sEnableDisable) (*A2sEnableDisableReply, error)
	A2sSetData(ctx context.Context, in *A2sSetData) (*A2sSetDataReply, error)
}

type serviceClient struct {
	conn api.Connection
}

func NewServiceClient(conn api.Connection) RPCService {
	return &serviceClient{conn}
}

func (c *serviceClient) A2sEnableDisable(ctx context.Context, in *A2sEnableDisable) (*A2sEnableDisableReply, error) {
	out := new(A2sEnableDisableReply)
	err := c.conn.Invoke(ctx, in, out)
	if err != nil {
		return nil, err
	}
	return out, api.RetvalToVPPApiError(out.Retval)
}

func (c *serviceClient) A2sSetData(ctx context.Context, in *A2sSetData) (*A2sSetDataReply, error) {
	out := new(A2sSetDataReply)
	err := c.conn.Invoke(ctx, in, out)
	if err != nil {
		return nil, err
	}
	return out, api.RetvalToVPPApiError(out.Retval)
}
